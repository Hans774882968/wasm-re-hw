let i,u=null;function b(){return(u===null||u.byteLength===0)&&(u=new Uint8Array(i.memory.buffer)),u}let w=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&w.decode();const E=2146435072;let g=0;function T(e,n){return g+=n,g>=E&&(w=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}},w.decode(),g=n),w.decode(b().subarray(e,e+n))}function _(e,n){return e=e>>>0,T(e,n)}let l=0;const y=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},x=typeof y.encodeInto=="function"?function(e,n){return y.encodeInto(e,n)}:function(e,n){const t=y.encode(e);return n.set(t),{read:e.length,written:t.length}};function p(e,n,t){if(t===void 0){const f=y.encode(e),c=n(f.length,1)>>>0;return b().subarray(c,c+f.length).set(f),l=f.length,c}let r=e.length,o=n(r,1)>>>0;const s=b();let a=0;for(;a<r;a++){const f=e.charCodeAt(a);if(f>127)break;s[o+a]=f}if(a!==r){a!==0&&(e=e.slice(a)),o=t(o,r,r=a+e.length*3,1)>>>0;const f=b().subarray(o+a,o+r),c=x(e,f);a+=c.written,o=t(o,r,a,1)>>>0}return l=a,o}function d(e,n){const t=n(e.length*1,1)>>>0;return b().set(e,t/1),l=e.length,t}function A(e){let n,t;try{const r=d(e,i.__wbindgen_malloc),o=l,s=i.get_bytes_sha256_pure(r,o);return n=s[0],t=s[1],_(s[0],s[1])}finally{i.__wbindgen_free(n,t,1)}}function R(e){let n,t;try{const r=d(e,i.__wbindgen_malloc),o=l,s=i.get_bytes_sha512_pure(r,o);return n=s[0],t=s[1],_(s[0],s[1])}finally{i.__wbindgen_free(n,t,1)}}function S(e,n){let t,r;try{const o=d(e,i.__wbindgen_malloc),s=l,a=p(n,i.__wbindgen_malloc,i.__wbindgen_realloc),f=l,c=i.get_bytes_sha256_with_salt(o,s,a,f);return t=c[0],r=c[1],_(c[0],c[1])}finally{i.__wbindgen_free(t,r,1)}}function W(e,n){let t,r;try{const o=d(e,i.__wbindgen_malloc),s=l,a=p(n,i.__wbindgen_malloc,i.__wbindgen_realloc),f=l,c=i.get_bytes_sha512_with_salt(o,s,a,f);return t=c[0],r=c[1],_(c[0],c[1])}finally{i.__wbindgen_free(t,r,1)}}function D(e){let n,t;try{const r=d(e,i.__wbindgen_malloc),o=l,s=i.get_bytes_sha256(r,o);return n=s[0],t=s[1],_(s[0],s[1])}finally{i.__wbindgen_free(n,t,1)}}function M(e){let n,t;try{const r=d(e,i.__wbindgen_malloc),o=l,s=i.get_bytes_sha512(r,o);return n=s[0],t=s[1],_(s[0],s[1])}finally{i.__wbindgen_free(n,t,1)}}const O=new Set(["basic","cors","default"]);async function v(e,n){if(typeof Response=="function"&&e instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(e,n)}catch(r){if(e.ok&&O.has(e.type)&&e.headers.get("Content-Type")!=="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",r);else throw r}const t=await e.arrayBuffer();return await WebAssembly.instantiate(t,n)}else{const t=await WebAssembly.instantiate(e,n);return t instanceof WebAssembly.Instance?{instance:t,module:e}:t}}function I(){const e={};return e.wbg={},e.wbg.__wbindgen_init_externref_table=function(){const n=i.__wbindgen_export_0,t=n.grow(4);n.set(0,void 0),n.set(t+0,void 0),n.set(t+1,null),n.set(t+2,!0),n.set(t+3,!1)},e.wbg.__wbindgen_string_new=function(n,t){return _(n,t)},e}function U(e,n){return i=e.exports,m.__wbindgen_wasm_module=n,u=null,i.__wbindgen_start(),i}async function m(e){if(i!==void 0)return i;typeof e<"u"&&(Object.getPrototypeOf(e)===Object.prototype?{module_or_path:e}=e:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof e>"u"&&(e=new URL("/wasm-re-hw/assets/rust_wasm_bg-BGtejdIg.wasm",import.meta.url));const n=I();(typeof e=="string"||typeof Request=="function"&&e instanceof Request||typeof URL=="function"&&e instanceof URL)&&(e=fetch(e));const{instance:t,module:r}=await v(await e,n);return U(t,r)}let h=!1;async function B(){if(!h)try{await m(),h=!0}catch(e){console.error("Rust WASM 初始化失败",e)}}self.onmessage=async function(e){const{id:n,type:t,data:r,salt:o}=e.data;try{await B();let s;if(t==="sha256-pure")s=A(r);else if(t==="sha512-pure")s=R(r);else if(t==="sha256-default-salt")s=D(r);else if(t==="sha512-default-salt")s=M(r);else if(t==="sha256-salt")s=S(r,o);else if(t==="sha512-salt")s=W(r,o);else throw new Error(`Unknown hash type: ${t}`);self.postMessage({id:n,type:t,result:s,status:"success"})}catch(s){self.postMessage({id:n,type:t,error:s.message||"计算失败",status:"error"})}};
